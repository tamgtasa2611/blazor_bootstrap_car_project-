@page "/brand/edit/{Id:int}"
@using BlazorBootstrap_Car.Data
@using MySql.Data.MySqlClient;
@using BlazorBootstrap

<h3 class="mb-3">Edit Brand: @brand.Name</h3>

<EditForm Model="brand" OnValidSubmit="UpdateBrand">
    <DataAnnotationsValidator />
    <div class="form-group row mb-3">
        <div class="col-md-10">
            <label for="Name" class="form-label">Name</label>
            <InputText @bind-Value=brand.Name class="form-control"/>
            <div class="text-danger">
                <ValidationMessage For="() => brand.Name" />
            </div>
        </div>
    </div>

    <div class="form-group row mb-3">
        <div class="col-md-10">
            <label for="IsDeleted" class="form-label">Is deleted</label>
            <InputSelect @bind-Value=brand.IsDeleted class="form-select" id="IsDeleted">
                <option value="0" selected="@(brand.IsDeleted == 0)">No</option>
                <option value="1" selected="@(brand.IsDeleted == 1)">Deleted</option>
            </InputSelect>
            <div class="text-danger">
                <ValidationMessage For="() => brand.IsDeleted" />
            </div>
        </div>
    </div>

    <div class="row mb-3">
        <div class="col-md-12">
            <div class="d-flex">
                <a href="/brand" class="btn btn-secondary me-3 rounded-5"><Icon Name="IconName.ArrowLeftCircle" /> Back</a>
                <button type="submit" class="btn btn-primary rounded-5"><Icon Name="IconName.ArrowUpCircle" /> Update</button>
            </div>
        </div>
    </div>
</EditForm>

@code {
    [Parameter]
    public int Id { get; set; }
    [Inject]
    private NavigationManager? NavigationManager { get; set; }
    Brand brand = new Brand();
    protected override void OnParametersSet()
    {
        if (Id != 0)
        {
            brand = GetBrand(Id);
        }
    }

    public Brand GetBrand(int Id)
    {
        var conn = DBMySQL.GetMySqlConnection();
        try
        {
            conn.Open();
            string sqlGetBrand = $"SELECT * FROM brands WHERE id = {Id}";
            MySqlCommand cmd = conn.CreateCommand();
            cmd.CommandText = sqlGetBrand;
            MySqlDataReader mySqlDataReader = cmd.ExecuteReader();
            if(mySqlDataReader.Read())
            {
                brand.Id = mySqlDataReader.GetInt32("id");
                brand.Name = mySqlDataReader.GetString("name");
                brand.IsDeleted = mySqlDataReader.GetInt32("is_deleted");
            }

            conn.Close();
        } catch(Exception e)
        {
            Console.WriteLine(e.Message);
        }
        return brand;
    }


    protected void UpdateBrand()
    {
        string Name = brand.Name;
        int IsDeleted = brand.IsDeleted;
        string SqlUpdate = $"UPDATE brands SET name = '{Name}', is_deleted = {IsDeleted} WHERE id = {Id}";
        MySqlConnection conn = DBMySQL.GetMySqlConnection();
        conn.Open();
        MySqlCommand cmd = new MySqlCommand(SqlUpdate, conn);
        cmd.ExecuteNonQuery();
        conn.Close();
        NavigationManager.NavigateTo("/brand", forceLoad: true);
    }
}
